<script>
  function showLoading() {
    var form = document.getElementById("formFormApi");
    form.style.display = "none"
    var loading = document.getElementById("loading");
    loading.style.display = "block"
    var result = document.getElementById("result");
    result.style.display = "none"
  }

  function hideLoading() {
    var form = document.getElementById("formFormApi");
    form.style.display = "block"
    var loading = document.getElementById("loading");
    loading.style.display = "none"
    var result = document.getElementById("result");
    result.style.display = "none"
  }

  function showResult() {
    var form = document.getElementById("formFormApi");
    form.style.display = "none"
    var loading = document.getElementById("loading");
    loading.style.display = "none"
    var result = document.getElementById("result");
    result.style.display = "block"
  }

  function updateSprintFolderName(value) {
    console.log(value);
    document.getElementById("inputSprint").value = value
  }

  var webSocket = new WebSocket('ws://localhost:3002/', 'test-protocol')
  webSocket.onmessage = event => {
    console.log(event);
    if (event.data instanceof Blob) {
      event.data.text().then(txt => {
        console.log(txt)
        let data = JSON.parse(txt)
        let message = data.message
        let percent = data.percent

        let h3 = document.getElementById('ws_return')
        let progressBar = document.getElementById('progress_bar')

        h3.textContent = message
        progressBar.setAttribute("style", "width: " + percent + "%")
      })
    } else {
      console.log("Result: " + event.data);
    }
  }

  function callApi() {
    let payload = {
      inputSprintJira: document.getElementById("inputSprintJira").value,
      inputSprint: document.getElementById("inputSprint").value,
      inputSessionTokenJira: document.getElementById("inputSessionTokenJira").value,
      inputSessionTokenSquash: document.getElementById("inputSessionTokenSquash").value,
      inputSessionTokenSquashBis: document.getElementById("inputSessionTokenSquashBis").value,
      validator: "api"
    }
    let data = new FormData()
    Object.entries(payload).forEach(el => {
      data.append(el[0], el[1])
    })
    fetch("/api/fromApi", {
      method: "POST",
      body: data,
    }).then(async res => {
      console.log("debut de la sessions redirection")
      while (document.getElementById("progress_bar").style.width !== "100%") {
        await sleep(1000)
        console.log("wait");
      }
      console.log("fin de la sessions redirection")
      return res.json()
    }).then(res => {
      console.log("dataRecu: ");
      console.log(res);
      showResult()
      var pre = document.getElementById("result_info")
      pre.textContent = res.moreInfo
      var h2 = document.getElementById("result_title")
      h2.textContent = res.message
    }).catch(err => console.log(err))
  }

</script>
<div id="result" class="mt-5 " style="display: none;">
  <h2 id="result_title" class="text-center">hngf;kjhn</h2>
  <pre id="result_info" class="text-left">ghnk;fh;kjn</pre>
  <div class="text-center"><a
      href="https://test-management.orangeapplicationsforbusiness.com/squash/requirement-workspace/" target="_blank"
      class="btn btn-outline-success btn-lg" type="button">Voir dans Squash</a>
    <input class="btn btn-outline-danger btn-lg" type="button" value="Nouvelle itération" onclick="hideLoading()" />
  </div>

</div>
<div id="loading" class="mt-5 text-center" style="display: none;">
  <h2>Chargement en cours ...</h2>
  <h3 id="ws_return"></h3>
  <%- include('../loader.ejs'); %>
    <div class="progress">
      <div id="progress_bar" class="progress-bar progress-bar-striped progress-bar-animated bg-warning"
        role="progressbar" style="width: 0%"></div>
    </div>
    <div class="text-center m-2">
      <button type="button" onclick="hideLoading()" class="btn btn-outline-danger btn-lg" name="validator"
        value="api">Annuler</button>
    </div>
</div>
<form action="/fromAPI" id="formFormApi" method="post" enctype="multipart/form-data">
  <div class="mb-3">
    <div class="row">
      <div class="col-6">
        <label for="inputSprintJira" class="form-label">Numéro de Sprint dans Jira</label>
        <input type="input" class="form-control" id="inputSprintJira" name="inputSprintJira"
          aria-describedby="sprintHelp" onchange="updateSprintFolderName(this.value)">
        <div id="sprintHelp" class="form-text">Le numéro du sprint doit bien être présent dans Jira</div>
      </div>
      <div class="col-6">
        <label for="inputSprint" class="form-label">Nom du dossier dans Squash</label>
        <input type="input" class="form-control" id="inputSprint" name="inputSprint" aria-describedby="sprintHelp">
        <div id="sprintHelp" class="form-text">Valeur par défaut : undefined</div>
      </div>
    </div>
  </div>
  <div class="mb-3">
    <div class="row">
      <div class="col-4">
        <label for="inputSessionTokenJira" class="form-label">ID de session Jira</label>
        <input type="input" class="form-control" id="inputSessionTokenJira" name="inputSessionTokenJira"
          aria-describedby="sessionHelp" required>
        <div id="sessionHelp" class="form-text">Se connecter à <a href="<%=jiraHome%>" target="_blank">Jira</a> et
          récupérer le cookie "JSESSIONID"</div>
      </div>
      <div class="col-4">
        <label for="inputSessionTokenSquash" class="form-label">ID de session Squash 1</label>
        <input type="input" class="form-control" id="inputSessionTokenSquash" name="inputSessionTokenSquash"
          aria-describedby="sessionHelp" required>
        <div id="sessionHelp" class="form-text">Se connecter à <a href="<%=squashHome%>" target="_blank">Squash</a> et
          récupérer le cookie "JSESSIONID"</div>
      </div>
      <div class="col-4">
        <label for="inputSessionTokenSquashBis" class="form-label">ID de session Squash 2</label>
        <input type="input" class="form-control" id="inputSessionTokenSquashBis" name="inputSessionTokenSquashBis"
          aria-describedby="sessionHelp" required>
        <div id="sessionHelp" class="form-text">Se connecter à <a href="<%=squashHome%>" target="_blank">Squash</a> et
          récupérer le cookie "squashtm"</div>
      </div>
    </div>
  </div>
  <div class="text-center">
    <button type="button" onclick="showLoading();callApi()" class="btn btn-outline-success btn-lg" name="validator"
      value="api">Transférer</button>
  </div>
</form>