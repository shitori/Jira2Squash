<script>
  function showLoadingRf2Sq() {
    var form = document.getElementById("rf2squash");
    form.style.display = "none"
    var loading = document.getElementById("loading_rf2sq");
    loading.style.display = "block"
  }

  function hideLoadingRf2Sq() {
    var form = document.getElementById("rf2squash");
    form.style.display = "block"
    var loading = document.getElementById("loading_rf2sq");
    loading.style.display = "none"
    var result = document.getElementById("result_rf2sq");
    result.style.display = "none"
    //window.stop();
  }

  function showResultRf2Sq() {
    var form = document.getElementById("rf2squash");
    form.style.display = "none"
    var loading = document.getElementById("loading_rf2sq");
    loading.style.display = "none"
    var result = document.getElementById("result_rf2sq");
    result.style.display = "block"
  }

  var webSocketRf2Sq = new WebSocket('ws://localhost:3002/', 'test-protocol')
  webSocketRf2Sq.onmessage = event => {
    console.log(event);
    if (event.data instanceof Blob) {
      event.data.text().then(txt => {
        console.log(txt)
        let data = JSON.parse(txt)
        let message = data.message
        let percent = data.percent

        let h3 = document.getElementById('ws_return_rf2sq')
        let progressBar = document.getElementById('progress_bar_rf2sq')

        h3.textContent = message
        progressBar.setAttribute("style", "width: " + percent + "%")
      })
    } else {
      console.log("Result: " + event.data);
    }
  }

  function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  function callApiRf2Sq() {
    let payload = {
      inputSessionTokenSquash: document.querySelectorAll("[id='inputSessionTokenSquash']")[1].value,
      inputSprint: document.querySelectorAll("[id='inputSprint']")[1].value
    }

    let data = new FormData()
    //data.append("json",JSON.stringify(payload))
    data.append("inputSessionTokenSquash", document.querySelectorAll("[id='inputSessionTokenSquash']")[1].value)
    data.append("inputSprint", document.querySelectorAll("[id='inputSprint']")[1].value)
    fetch("/api/rf2squashnofile", {
      method: "POST",
      body: data
    }).then(async res => {
      console.log("debut de la sessions redirection")
      while (document.getElementById("progress_bar_rf2sq").style.width !== "100%") {
        await sleep(1000)
        console.log("wait");
      }
      console.log("fin de la sessions redirection")
      return res.json()
    }).then(res => {
      console.log(res)
      showResultRf2Sq()

      /*var pre = document.getElementById("result_rf2sq_info")
      pre.textContent = res.moreInfo*/
      let result = res.result
      let contantCard = document.getElementById('result_rf2sq_detail')
      contantCard.innerHTML = ""
      let success = 0
      let fail = 0
      result.forEach(element => {
        if (element.status !== "SUCCESS") {
          success++
          createCard(contantCard, element)
        }
      })
      result.forEach(element => {
        if (element.status === "SUCCESS") {
          fail++
          createCard(contantCard, element)
        }
      })

      var h2 = document.getElementById("result_rf2sq_title")
      h2.textContent = res.message + ", " + success + " success et " + fail + " fails"
    }).catch(err => console.log(err))
  }
  function createCard(contantCard, element) {
    let div = document.createElement('div');
    div.className = (element.status == "SUCCESS" ? 'card m-2 mx-auto bg-success bg-gradient' : 'card m-2 mx-auto bg-danger bg-gradient')
    div.style.width = '35rem'
    div.innerHTML = `
          <div class="card-body">
            <h5 class="card-title "> `+ (element.status == "SUCCESS" ? `✅ ` : `❌ `) + element.testName + ` ` + ` </h5>
            <p class="card-text text-center">ID test : `+ element.realId + ` / ID execution : ` + element.id + `</p>
          </div>
        `
    contantCard.appendChild(div)
  }
</script>
<div id="result_rf2sq" class="mt-5 " style="display: none;">
  <h2 id="result_rf2sq_title" class="text-center"></h2>
  <!--pre id="result_rf2sq_info" class="text-left"></pre-->
  <div class="text-center"><a
      href="https://test-management.orangeapplicationsforbusiness.com/squash/requirement-workspace/" target="_blank"
      class="btn btn-outline-success btn-lg" type="button">Voir dans Squash</a>
    <input class="btn btn-outline-danger btn-lg" type="button" value="Nouvelle itération"
      onclick="hideLoadingRf2Sq()" />
  </div>
  <div class="row" id="result_rf2sq_detail">
    <div class="card m-2 bg-success bg-gradient mx-auto" style="width: 10rem;">
      <div class="card-body ">
        <h5 class="card-title">idTest ✅ / ❌ </h5>
        <p class="card-text">dhkjfhsd :fdshfsgdj</p>
      </div>
    </div>
    <div class="card m-2 bg-danger bg-gradient mx-auto" style="width: 10rem;">
      <div class="card-body ">
        <h5 class="card-title">idTest ✓ / ❌ </h5>
      </div>
    </div>
  </div>
  <div class="text-center"><a
      href="https://test-management.orangeapplicationsforbusiness.com/squash/requirement-workspace/" target="_blank"
      class="btn btn-outline-success btn-lg" type="button">Voir dans Squash</a>
    <input class="btn btn-outline-danger btn-lg" type="button" value="Nouvelle itération"
      onclick="hideLoadingRf2Sq()" />
  </div>

</div>
<div id="loading_rf2sq" class="mt-5 text-center" style="display: none;">
  <h2>Chargement en cours ...</h2>
  <h3 id="ws_return_rf2sq"></h3>
  <%- include('../loader.ejs'); %>
    <div class="progress">
      <div id="progress_bar_rf2sq" class="progress-bar progress-bar-striped progress-bar-animated bg-warning"
        role="progressbar" style="width: 0%"></div>
    </div>
    <div class="text-center m-2">
      <button type="button" onclick="hideLoadingRf2Sq()" class="btn btn-outline-danger btn-lg" name="validator"
        value="api">Annuler</button>
    </div>
</div>
<form action="/rf2squashnofile" id="rf2squash" method="post" enctype="multipart/form-data">
  <div class="mb-3 row">
    <div class="col-3"><label for="inputSprint" class="form-label">Sprint n°</label>
      <input type="input" class="form-control" id="inputSprint" name="inputSprint" aria-describedby="sprintHelp">
      <div id="sprintHelp" class="form-text">Valeur par défaut : Robot FrameWork</div>
    </div>
    <div class="col-9"><label for="inputSessionTokenSquash" class="form-label">ID de session Squash</label>
      <input type="input" class="form-control" id="inputSessionTokenSquash" name="inputSessionTokenSquash"
        aria-describedby="sessionHelp" required>
      <div id="sessionHelp" class="form-text">Se connecter à <a
          href="https://test-management.orangeapplicationsforbusiness.com/squash/home-workspace"
          target="_blank">Squash</a> et récupérer
        le cookie JSESSIONID</div>
    </div>
  </div>
  <div class="text-center">
    <button type="button" class="btn btn-outline-success btn-lg" name="validator"
      onclick="showLoadingRf2Sq();callApiRf2Sq()" value="api">Transférer</button>
  </div>
</form>